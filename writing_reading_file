// project 
const http=require('http');
const fs=require('fs');
const server=http.createServer((req,res)=>{
    const url=req.url;
    const method=req.method;
    if(url==='/message' && method==='POST'){

        const body=[];
        req.on('data', (chunk)=>{
            console.log(chunk);
            body.push(chunk);
        });
        req.on('end', ()=>{
            const parsedbody= Buffer.concat(body).toString();
            const message= parsedbody.split('=')[1];
            fs.writeFileSync('message.txt', message);
        });
        res.statusCode=302;
        res.setHeader('Location', '/');
        return res.end();

    }
    fs.readFile('message.txt', function(err, data) { 
        return res.write(data.toString()); 
       
      }); 
        res.write('<html>');
        res.write('<head><title>Enter Message</title></head>');
        res.write('<body><form action="/message" method="POST"><input type="text" name="message"><button type="submit">Send</button></form></body>');
        res.write('</html>');
    
});
server.listen(3000);



//similar form like youtuber

const http=require('http');
const fs=require('fs');
const server=http.createServer((req,res)=>{
    const url=req.url;
    const method=req.method;
    if(url ==='/'){
    
        res.write('<html>');
        res.write('<head><title>Enter Message</title></head>');
        res.write('<body><form action="/message" method="POST"><input type="text" name="message"><button type="submit">Send</button></form></body>');
        res.write('</html>');
        return res.end(); 
    }
    if(url==='/message' && method==='POST'){
        fs.writeFileSync('message.txt', 'dummy text');
        res.statusCode=302;
        res.setHeader('Location', '/');
        return res.end();

    }
    res.setHeader('Content-Type', 'text/html');
    res.write('<html>');
    res.write('<head><title>My First Page</title></head>');
    res.write('<body><h1>Hello from my Node.js Server!</h1></body>');
    res.write('</html>');
    res.end(); 
    
});
server.listen(3000);

/////
Question:  What is the use of having buffers and streams? When would you use it?.
Ans:buffers and streams manipulate large data into chunks... stream read and write files continousely..
